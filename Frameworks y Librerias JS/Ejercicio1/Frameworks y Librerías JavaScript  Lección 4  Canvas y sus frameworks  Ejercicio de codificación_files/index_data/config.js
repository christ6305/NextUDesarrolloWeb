var configuration = {
	program: "WEB",
	//program: "UIUX",
	//program: "no",
	activityName: "Documento básico",
	ActivityDescription: "<p>El desarrollador web hace parte de un equipo interdisciplinario de personas que aportan sus conocimientos para lograr un fin común. En muchas ocasiones hemos usado imágenes que nos facilita un diseñador gráfico y sólo debemos ubicarlas en el diseño general de la página web. Sin embargo, HTML5 introduce una nueva manera en que los desarrolladores también pueden crear elementos gráficos de cero, gracias a la etiqueta canvas.<br><br>Adicional a lo anterior, han sido creados diversos frameworks que añaden funcionalidades y características a los contenidos que se pueden crear en canvas, así como simplificar la creación de dibujos con menor cantidad de código. Uno de los más comunes es Konva, un framework para canvas que permite añadir interactividad, hacer animaciones con buen desempeño, transiciones, capas, filtrado y más para aplicaciones de escritorio y móviles.</p><center> <div> <pre class='line-numbers' style='margin: 10px 250px 10px 250px'> <code class='language-javascript'> var anim=new Konva.Animation(function(frame){<br>dibujo.rotate(frame.timeDiff * 90 / 1000);<br>}, layer);<br>anim.start(); </code></pre> </div></center><p><strong><span style='font-weight: 400;''>En este ejercicio est&aacute;s encargado de complementar el desarrollo de un portal web para lectura de cuentos para ni&ntilde;os. Debes usar </span>canvas y Konva Js<span style='font-weight: 400;''> para crear una ilustraci&oacute;n para el cuento que se muestra en pantalla. La ilustraci&oacute;n para el cuento debe estar acompa&ntilde;ada de movimiento e interactividad para el usuario.</span></strong></p><center><img src='img.png' style='width: 650px'></center><p>Para realizar la ilustración del cuento debes ubicar de manera aleatoria 10 estrellas de diferentes tamaños, animarlas para que giren y modifiquen su tamaño, y que el usuario las pueda arrastrar dentro del recuadro de la imágen. Sigue las siguientes instrucciones para completar el ejercicio.</p>",
	goodp: ["Cuando usas canvas o frameworks relacionados, es recomendable manejar las variables de posicionamiento y tamaño relativos a las dimensiones del stage o escenario de ilustración, ya que esto asegura una asignación de estas propiedades en un nivel proporcional al contexto de dibujo."], 
	content: "Para el desarrollo de este ejercicio debes descargar el siguiente código base:",
	instructions : ['En el código base se ha creado un contenedor con el id “dibujo” con la etiqueta div. Para desarrollar este ejercicio, puedes utilizar canvas o Konva Js, para empezar, debes escoger tu herramienta. <br>Si vas a usar canvas, cambia la etiqueta div por canvas, de lo contrario, para usar Konva Js debes dejar el contenedor tal cual está.','Realiza todo el código para la ilustración en el archivo <strong>index.js.</strong>','Define un ancho para la ilustración de 556 píxeles y un alto de 316 píxeles.','Crea una función que adicione una estrella de tamaño, rotación y posición aleatorias. Debe tener 5 puntas y contorno negro, color de fondo amarillo, un poco transparente, y que se pueda arrastrar al seleccionarla con el mouse.<center><img src="img1.png" style="width: 320px;"></center>','Crea en la misma función anterior, una animación que haga rotar constantemente la estrella sobre su propio centro y que su tamaño incremente y decremente de manera aleatoria. Esto arroja como resultado una estrella giratoria cuyo tamaño varía <center><video width="320" height="240" controls><source src="C5U1L4 Ejercicio.mp4" type="video/mp4"></video></center>','Crea el escenario y capas necesarias para mostrar la ilustración, sin olvidar seleccionar el contenedor con el id “dibujo”.',' Añade mediante un ciclo 10 estrellas a la ilustración, usando la función que creaste en pasos anteriores.'], // el texto Instrucciones no irá si este array está vacio o no está
	type: "exercise-code",
	time: [45,'min.','minutos'],
	solutionTitle: "SOLUCIÓN TEST", // Si no está, aparecerá "Solución" por defecto
	solution: 'solucion/NextUsolucionCanvas.zip',  // si no está o está vacio no aparecerá
	base : 'solucion/NextUcodBaseCanvas.zip' // si no está o está vacio no aparecerá
}

$.getScript( "../../includes/js/" + configuration.type + ".js" )
$('.backdrop').on('click', function() {
	$('#alert').toggleClass('active');
})
