var configuration = {
	activityName: "Web Workers",
	ActivityDescription: '<p><strong>JavaScript </strong><span style="font-weight: 400;">es una herramienta muy &uacute;til para realizar todo tipo de acciones al momento de mostrar una p&aacute;gina web en el navegador. Su estructura permite usarlo desde el mismo documento HTML sobre el que aplica sus acciones mediante la etiqueta script, o tambi&eacute;n permite crear archivos JavaScript externos y enlazarlos a la p&aacute;gina que vamos a complementar con esta herramienta.</span></p><p><strong><br/><span style="font-weight: 400;">Adicionalmente, JavaScript se constituye como un lenguaje as&iacute;ncrono, el cual incluye tiempos de ejecuci&oacute;n dif&iacute;ciles de comprender y en ocasiones esto produce muchos errores que a nuestro parecer no lo son y que son muy dif&iacute;ciles de detectar. Para esto, existen navegadores especializados que permiten interactuar con los scripts en ejecuci&oacute;n y as&iacute;, identificar y corregir errores que sin ellos, ser&iacute;a muy dif&iacute;cil encontrar. Un ejemplo es </span><strong>Firefox Developer Edition</strong><span style="font-weight: 400;">, el cual incluye varias funcionalidades para desarrolladores de m&uacute;ltiples tecnolog&iacute;as web.</span></strong></p><center><img src="image01.png" style="width: 600px"></center><p><span style="font-weight: 400;">Para realizar este ejercicio, sup&oacute;n lo siguiente:</span></p><p><span style="font-weight: 400;">Un equipo de desarrollo se encuentra realizando una aplicaci&oacute;n de </span><strong>agenda que programe citas y recordatorios</strong><span style="font-weight: 400;">. T&uacute;, como parte del grupo, debes encargarte de las primeras acciones de la aplicaci&oacute;n: &iquest;Aceptas el desaf&iacute;o? </span></p><p><strong><br/><span style="font-weight: 400;">Una parte del equipo te entrega el dise&ntilde;o de la p&aacute;gina construido y t&uacute; debes lograr que, </span><strong>al hacer click en cualquiera de los meses del calendario</strong><span style="font-weight: 400;">, aparezca un</span><strong> mensaje en consola</strong><span style="font-weight: 400;"> que indique la </span><strong>posici&oacute;n</strong><span style="font-weight: 400;"> exacta en la que se realiz&oacute; dicho click.</span></strong></p><center><img src="image02.png" style="width: 600px"></center><center><img src="image03.png" style="width: 600px"></center>',
	program: "WEB",
	content : ' ',
	instructions : ['<span style="font-weight: 400;"> Descarga el </span><strong>codBase.zip</strong><span style="font-weight: 400;"> que contiene la p&aacute;gina web.</span>','<span style="font-weight: 400;"> Para la primera parte del ejercicio debes crear tu c&oacute;digo con la </span><strong>etiqueta script</strong><span style="font-weight: 400;"> dentro del archivo HTML.</span>','<span style="font-weight: 400;"> Debes seleccionar</span><strong> la im&aacute;gen</strong><span style="font-weight: 400;"> que contiene todos los meses, como lo viste en los ejemplos durante las lecciones, y almacenarla en una variable. En este caso, la im&aacute;gen tiene el </span><strong>id &ldquo;calendario&rdquo;.</strong>','<span style="font-weight: 400;"> Asigna a la variable anterior un evento que, al hacer click, muestre un mensaje en consola. Este mensaje debe definirse en una variable. Para obtener la posici&oacute;n actual debes usar la palabra </span><strong>event</strong><span style="font-weight: 400;"> en los </span><strong>par&eacute;ntesis,</strong><span style="font-weight: 400;"> despu&eacute;s de la palabra </span><strong>function </strong><span style="font-weight: 400;">en el evento, y al crear la variable </span><strong>mensaje, </strong><span style="font-weight: 400;">usa </span><strong>event.clientX </strong><span style="font-weight: 400;">y </span><strong>event.clientY</strong><span style="font-weight: 400;"> para obtener la posici&oacute;n en X y en Y. Estos son los valores que debes mostrar en consola.</span>','<span style="font-weight: 400;"> Recuerda que la etiqueta </span><strong>script</strong><span style="font-weight: 400;"> debe estar justo antes de que se </span><strong>cierre la etiqueta body</strong><span style="font-weight: 400;">, para no realizar acciones sin que se hayan cargado elementos.</span>','<span style="font-weight: 400;"> Cuando hayas terminado, borra el contenido de la etiqueta script y realiza el mismo procedimiento mediante un </span><strong>archivo .js externo</strong><span style="font-weight: 400;"> y </span><strong>enl&aacute;zalo &nbsp;al archivo HTML,</strong><span style="font-weight: 400;"> justo antes del cierre de la etiqueta body. </span>','<span style="font-weight: 400;"> Usa las herramientas del navegador para acceder al </span><strong>Debugger</strong><span style="font-weight: 400;">, en el cual debes inspeccionar tu c&oacute;digo usando dos </span><strong>breakpoints</strong><span style="font-weight: 400;"> para verificar el valor de las variables involucradas. Esta acci&oacute;n debes hacerla cada vez que encuentres problemas en la ejecuci&oacute;n de tu script.</span>'], // el texto Instrucciones no irá si este array está vacio o no está
	type: "exercise-code",
	time: [20,'min.','minutos'],
	solutionTitle: "Solución", // Si no está, aparecerá "Solución" por defecto
	solution : "solucion/solucion.zip",
	goodp : ['Aunque el uso de la etiqueta script dentro del archivo HTML es correcta y funciona adecuadamente, se recomienda siempre usar archivos .js externos para la codificación JavaScript, ya que esta separación ayuda a que el mantenimiento del código sea más fácil y permita mayor limpieza y legibilidad en los archivos.'],
	base: 'solucion/codBase.zip'
}

$.getScript( "../../includes/js/" + configuration.type + ".js" )
$('.backdrop').on('click', function() {
	$('#alert').toggleClass('active');
})


