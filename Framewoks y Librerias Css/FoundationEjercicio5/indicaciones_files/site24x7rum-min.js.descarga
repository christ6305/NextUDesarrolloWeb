/*site24x7rum 
beacon Ver 2.0*/

var insightTMRUM=insightTMRUM||{
 deploy : function(t){
    var arr = t.tags_config;
    if(!!arr){
    	for (var i = 0; i<arr.length; i++) {
            checkAndExecute(arr[i],arr[i].event); 
        };
    }
 },
 createTag : function(a,b){
    var c = document.createElement(a);
    c.innerHTML = b;
    document.getElementsByTagName('head')[0].appendChild(c);
 },
 checkAndExecute : function(o,e){

    var wr= document.createElement('div');
    wr.innerHTML= (o && o.tag) ? o.tag : "";
    var d= wrapper.firstChild;
    var p =  d.text || d.textContent || d.innerHTML || "";
    if(e =="PAGEVIEW"){
        if(isExecutable(o.rules)){
            createTag(div.nodeName,p);
        }
    }
    if(e =="DOMREADY"){
        if (document.addEventListener) {
            document.addEventListener("DOMContentLoaded", function(event) {
                createTag(div.nodeName,p);
            });
        }
        else {
             document.attachEvent("onDOMContentLoaded", function(event) {
                createTag(div.nodeName,p);
            });
        } 
    }
    if(e == "PAGELOADED"){
        if (document.addEventListener) {
            document.addEventListener("load", function(event) {
                createTag(div.nodeName,p);
            });
        }
        else {
             document.attachEvent("onload", function(event) {
                createTag(div.nodeName,p);
            });
        } 
    }
 },
 getAttribute : function(a){

    var att = "",w=window.location;
    switch (a) {
        case "URL":
        att = w.href;
        break;
        case "HOSTNAME":
        att = w.hostname;
        break;
        case "PATH":
        att = w.pathname;
    }
    return att;
 },
 isExecutable : function(c){
    for(var j=0;j<c.length;c++){
        if(validate(getAttribute(c[i].attribute),c[i].name,c[i].condition)){
            return true;
        }
    }
    return false;
 },
 validate : function(a,b,c){
    var p = String(a),q = String(b);
    switch (c){
        case "EQUALS":
            return p == q;
        case "CONTAINS":
            return 0 <= p.indexOf(q);
        case "STARTSWITH":
            return 0 == p.indexOf(q);
        case "ENDSWITH":
            var l = p.length - q.length;
            return 0 <= l && p.indexOf(q, l) == l;
        case "REGEX_MATCHES":
            try{
                var r = new RegExp(b);
                return t.test(a);
            }
            catch (r) {
                return !1
            }

        case "NOTEQUALS":
            return !(p == q);
        case "NOTCONTAINS":
            return !(0 <= p.indexOf(q));
        case "NOTSTARTSWITH":
            return !(0 == p.indexOf(q));
        case "NOTENDSWITH":
            var l = p.length - q.length;
            return !(0 <= l && p.indexOf(q, l) == l);
        case "NOTREGEX_MATCHES":
            try{
                var r = new RegExp(b);
                return !t.test(a);
            }
            catch (r) {
                return !1
            }
    }
 }

};


var insightRUM = {


    constants: {
        perfStats: ["rdT", "dnsT", "conT", "beT", "fbT", "dlT", "nwT", "dpT", "drT", "feT", "totalRT"],//No I18N
        events: ["onload","onunload", "onkeypress", "onscroll", "onclick", "onerror"],//No I18N
		initiatorTypes: ["img", "css", "iframe", "link", "script", "xmlhttprequest"] //No I18N
    },


    /*-----------------------------------------*/
    colHelpers: {


        getFileName: function(i, f) {
            return (f && f != '') ? i.colHelpers.removeSpecialChars(f.substr((f.lastIndexOf("/") + 1), f.length)) : "";
        },

        addSPAEvents: function(a) {
            return a == true ? ["onpushstate", "onreplacestate", "onpopstate"] : ["onhashchange"]; //No I18N
        },
        
        pushRoutes : function(i,loc,perfTime){
        	if(typeof site24x7rum != 'undefined' && typeof site24x7rum.routeChanges!='undefined'){
          		var routechange={};
          		routechange.time=perfTime;
          		routechange.url=loc.hash.indexOf("#")>-1?loc.hash.replace("#",""):loc.pathname;
          		site24x7rum.routeChanges.push(routechange);
          		i.storeLastAjax('spa'); //No I18N
          	  }
        },
        
        getCurrentTime : function(){

    		if ("now" in window.performance == false){
    			return (Date.now() - window.performance.navigationStart);
    		}else{
    			return Math.round(window.performance.now());				
    		}	
    	},

        getTxnName: function(i, txn) {
            var tn, tsi = txn ? txn.indexOf(document.location.origin) > -1 ? document.location.origin.length : 0 : 0;
            tn = txn ? txn.substr(tsi, txn.indexOf('?') > -1 ? txn.indexOf('?') - tsi : txn.length) : document.location.pathname;
            tn = (tn.indexOf('https') > -1 || tn.indexOf('http') > -1) ? tn.replace(/(http|https):\/\//, '') : tn;
            tn = i.colHelpers.removeSpecialChars(tn).replace(/[a-f0-9]+[0-9][a-f0-9]+/g, '*').replace(/[0-9]+/g, '*');
            return tn;
        },


        stackTrace: function(stack, i) {
            var getObj = function(a, h, j, k, l) {
                    return obj = {
                        func: i.colHelpers.removeSpecialChars(a[h]),
                        fname: i.colHelpers.getFileName(i, i.colHelpers.getFileName(i, a[j])),
                        lineno: a[k],
                        colno: a[l]
                    };
                },
                stk = [],
                ind = stack.split("\n"),
                b, e = /^\s*at (.*?) ?\(?((?:file|https?|chrome-extension):.*?):(\d+)(?::(\d+))?\)?\s*$/i,
                f = /^\s*(.*?)(?:\((.*?)\))?@?((?:file|https?|chrome):.*?):(\d+)(?::(\d+))?\s*$/i,
                j = /^\s*at (?:((?:\[object object\])?.+) )?\(?((?:ms-appx|http|https):.*?):(\d+)(?::(\d+))?\)?\s*$/i;

            for (var m = 0; m < ind.length; m++) {
                (b = e.exec(ind[m])) ? stk.push(getObj(b, 1, 2, 3, 4)): ((b = f.exec(ind[m])) ? stk.push(getObj(b, 1, 3, 4, 5)) : ((b = j.exec(ind[m])) ? stk.push(getObj(b, 1, 2, 3, 4)) : ""));
            }
            return stk.length == 0 ? "" : stk.slice(0, stk.length > 10 ? 9 : stk.length);
        },

        replaceSpecialChars: function(name) {
            return name ? name.replace(/[`~!@#$%^&_|+=?;'",<>(){}[\]]/g, '') : name;
        },

        removeSpecialChars: function(name) {
            var match = /[';"%><?~!@#^&+|:]/.exec(name),
                index = match ? match.index : -1;
            return name ? name.substr(0, index > -1 ? index : name.length) : name;
        },

        addToSession: function(i,n, t, dt, s, e) {
            var sE = {};
            sE.nm = n;
            sE[t] = dt;
            sE.st = Math.round(s);
            sE.et = Math.round((typeof e != "undefined") ? e : i.colHelpers.getCurrentTime());//No I18N
            if (typeof site24x7rum != "undefined" && typeof site24x7rum.sessionTrace != "undefined") {
                var ev = (n == "scroll" || n == "typing") ? n : "";//No I18N
                if (site24x7rum.sessionTrace.length > 0 && site24x7rum.sessionTrace[site24x7rum.sessionTrace.length - 1].nm == ev) {
                    var prev = site24x7rum.sessionTrace.pop();
                    prev.et = sE.et;
                    site24x7rum.sessionTrace.push(prev);
                } else {
                    site24x7rum.sessionTrace.push(sE);
                }
            }
        },



        clearBuffer: function() {

            if (!!performance.getEntries && performance.getEntries().length >= 150) {
                if (!!performance.setResourceTimingBufferSize) {
                    performance.setResourceTimingBufferSize(performance.getEntries().length + 50);
                } else if (!!performance.webkitClearResourceTimings) {
                    performance.webkitClearResourceTimings();
                } else if (!!performance.clearResourceTimings) {
                    performance.clearResourceTimings();
                }
            }
        },
        
        addAjaxToSession: function(i,name, type, d, st){
        	
        	if(window.performance.getEntriesByName){var e =window.performance.getEntriesByName(name);}
            if (e && e.length > 0) {
                var j = i.xhrCallTracker.hasOwnProperty(name) ? i.xhrCallTracker[name] : 0;
                if (e[j].duration) {
                    e[j].loadEventEnd = e[j].fetchStart + e[j].duration;
                    var perf = i.colHelpers.getPerfStats(i,e[j]);
                    i.colHelpers.addToSession(i,i.colHelpers.getFormatedTxnName(i,name), type,d,st,(st+perf.totalRT));
                    }
                }
    	},

        getObjAsArray: function(o) {
            var arr = new Array();
            for (var key in o) {
                if (o.hasOwnProperty(key)) {
                    var obj = o[key];
                    obj.loadTime = Math.round(obj.loadTime / obj.count);
                    arr.push(obj);
                }
            }
            return arr;

        },
        
        getAsArray: function(o,l,p) {
        	 var ret =Object.keys(o).sort(function(a, b) {
                 return o[b][p] - o[a][p]
             });
             var arr = new Array();
             for (var j=0;j<ret.length;j++) {
                 if (o.hasOwnProperty(ret[j])) {
                     var obj = o[ret[j]];
                     arr.push(obj);
                 }
             }
             return arr.slice(0,l);
        },

        getPerfStats: function(i, pe) {
        	if(typeof pe != "undefined"){
        		var responseStart = !pe.responseStart || pe.responseStart <= 0 ? pe.fetchStart : pe.responseStart,
                        requestStart = pe.requestStart == 0 ? pe.fetchStart : pe.requestStart,
                        tsi = pe.name ? pe.name.indexOf(document.location.origin) > -1 ? document.location.origin.length : 0 : 0,
                        mD = {};

                    mD.txnName = pe.name ? pe.name.substr(tsi, pe.name.indexOf('?') > -1 ? pe.name.indexOf('?') - tsi : pe.name.length) : document.location.pathname;
                    mD.txnName = i.colHelpers.getFormatedTxnName(i, mD.txnName);
                    mD.rdT = Math.round((pe.fetchStart > 0 && (pe.domainLookupStart - pe.fetchStart) > 0) ? (pe.domainLookupStart - pe.fetchStart) : 0 + (pe.redirectEnd - pe.redirectStart)); //redirection time
                    mD.dnsT = Math.round(pe.domainLookupEnd - pe.domainLookupStart); // dns time
                    mD.conT = Math.round((pe.connectStart > 0 && (requestStart - pe.connectStart) > 0) ? (requestStart - pe.connectStart) : (pe.connectEnd - pe.connectStart)); // connection time
                    mD.beT = Math.round(responseStart - requestStart); // back end time
                    mD.dlT = (responseStart > 0 && (pe.responseEnd - responseStart) > 0) ? Math.round(pe.responseEnd - responseStart) : 0; //download time
                    mD.nwT = Math.round(mD.rdT + mD.dnsT + mD.conT + mD.dlT); // NetWork time
                    mD.fbT = (pe.responseStart > 0 && pe.fetchStart > 0 ) ? Math.round(pe.responseStart - pe.fetchStart) : Math.round(mD.beT + mD.nwT- mD.dlT); // first byte time
                    if (pe.domComplete && pe.domLoading) {
                        mD.dpT = Math.round(pe.domComplete - pe.domLoading); // doc processing time
                        mD.prT = Math.round(pe.loadEventEnd >0 && pe.loadEventStart > 0 ?pe.loadEventEnd - pe.loadEventStart : 0); // page rendering time
                    } else {
                        mD.dpT = mD.prT = 0;
                    }
                    mD.drT = Math.round(mD.dpT); // doc rendering time
                    mD.feT = mD.drT + mD.prT; // front End time		
                    mD.totalRT = mD.nwT + mD.beT + mD.feT;
                    return mD;
        	}
            
        },


        getAllResourceTimings: function(i) {
            var entriesJson = {};
            entriesJson.entriesList = new Array();
            var resourceTypeTotalRT = {};
            var rdc = 0;
            var domainNames = new Array();
            var topDomainNames = new Array();

            for (var temp = 0; temp < i.onPageLoadEntriesLen; temp++) {
                var entryData = {};
                var res = window.performance.getEntries()[temp];
                entryData.resource = i.colHelpers.getPerfStats(i, res);

                if (entryData.resource.totalRT > 0) {
                    var matches = res.name.match(/^(https|http)?:\/\/(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
                    if (matches && matches[2]) {
                        if (i.domainsToExclude.toString().indexOf(matches[2]) != -1) {
                            rdc++;
                            continue;
                        } else {
                            entryData.st = Math.round(res.startTime), entryData.et = Math.round(res.startTime + res.duration);
                            domainNames[matches[2]] = {
                                count: domainNames[matches[2]] ? domainNames[matches[2]].count + 1 : 1,
                                loadTime: domainNames[matches[2]] ? domainNames[matches[2]].loadTime + entryData.resource.totalRT : entryData.resource.totalRT,
                                name: matches[2]
                            }
                            entryData.nm = (!res.initiatorType || i.constants.initiatorTypes.toString().indexOf(res.initiatorType) == -1) ? 'Others' : res.initiatorType; //No I18N
                            entryData.nm = entryData.nm == 'link' ? 'css' : entryData.nm; //No I18N
                            resourceTypeTotalRT[entryData.nm] = {
                                loadTime: (resourceTypeTotalRT[entryData.nm] ? resourceTypeTotalRT[entryData.nm].loadTime : 0) + entryData.resource.totalRT,
                                count: (resourceTypeTotalRT[entryData.nm] ? resourceTypeTotalRT[entryData.nm].count : 0) + 1,
                                name: entryData.nm
                            }
                            entriesJson.entriesList.push(entryData)
                        }
                    }
                }
            }


            var sortedDomains = Object.keys(domainNames).sort(function(a, b) {
                return domainNames[b].loadTime - domainNames[a].loadTime
            });
            for (var j = 0; j < 5 && j < sortedDomains.length; j++) {
                var domain = {};
                domain = domainNames[sortedDomains[j]];
                domain.loadTime = Math.round(domain.loadTime / domain.count);
                topDomainNames.push(domain);
            }
            entriesJson.entriesList.sort(function(a, b) {
                return b.resource.totalRT - a.resource.totalRT
            });
            domainNames = domainNames.sort(function(a, b) {
                return a.loadTime - b.loadTime
            });
            var curTime = (new Date()).getTime();
            entriesJson.url = i.perfStats.txnName;entriesJson.pType=i.pType;
            entriesJson.sT = window.performance.timing.navigationStart;
            entriesJson.entriesList = entriesJson.entriesList.slice(0, entriesJson.entriesList.length < 100 ? entriesJson.entriesList.length : 100);
            entriesJson.domainInfo = topDomainNames;
            entriesJson.resourcesTotal = i.colHelpers.getObjAsArray(resourceTypeTotalRT);
            entriesJson.resourceCT = insightRUM.onPageLoadEntriesLen - rdc;
            entriesJson.totalRT = i.perfStats.totalRT;
            entriesJson.isOnDemand = i.colHelpers.getCookie(i, "site24x7RUMSnapshotId")!="" ? i.colHelpers.getCookie(i, "site24x7RUMSnapshotId")[1]:false;//No I18N
            entriesJson.endTime = i.colHelpers.getCurrentTime();
            entriesJson.sescolT = Number(i.colHelpers.getCookie(i, "site24x7RUMSnapshotId")[0]);//No I18N
            return entriesJson;
        },
        
        getDomainMetrics: function(i,a,b,type){
        	var domainStats={name : "-"};
        	domainStats.domains = new Array();
        	var matches = window.location.href.match(/^(https|http)?:\/\/(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
        	if(matches && matches[2]){
        		domainStats.name=matches[2];
        	}
        	domainStats.totalRT = i.perfStats.totalRT;
		    var domainData = {};
        	for (var temp = a; temp < b; temp++) {
			     var res = window.performance.getEntries()[temp];
        		 var perf = i.colHelpers.getPerfStats(i, res);
        		 if(perf.totalRT>0 && perf.totalRT < 150000){
        			 var type = (!res.initiatorType || i.constants.initiatorTypes.toString().indexOf(res.initiatorType) == -1) ? 'others' : res.initiatorType; //No I18N
                     type = type == 'link' ? 'css' : type; //No I18N
            		 var matches = res.name.match(/^(https|http)?:\/\/(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
    			
                     if (matches && !!matches[2]) {
    			
                         if (i.domainsToExclude.toString().indexOf(matches[2]) != -1) {
                             continue;
                         } else if(domainData[matches[2]]){
    			
                        	 domainData[matches[2]].stats.totalCT = domainData[matches[2]].stats.totalCT + 1;
                        	 domainData[matches[2]].stats.totalRT = domainData[matches[2]].stats.totalRT + perf.totalRT;
                        	 if(domainData[matches[2]][type]){
                        		 domainData[matches[2]][type].totalCT = domainData[matches[2]][type].totalCT + 1;
                            	 domainData[matches[2]][type].totalRT = domainData[matches[2]][type].totalRT + perf.totalRT; 
                        	 }else{
                        		 domainData[matches[2]][type] = {
                                         totalCT: 1,
                                         totalRT: perf.totalRT
                                     }
                        	 }       	 
                         }else{
                        	 domainData[matches[2]] = {
                        			 name: matches[2],
                        			 type: matches[2] == domainStats.name ?"first":"third", //No I18N
                        		     stats :{
                        		    	 totalCT: 1,
                        		    	 totalRT: perf.totalRT
                        		     }
                                 };
                        	 domainData[matches[2]][type] = {
                                     totalCT: 1,
                                     totalRT: perf.totalRT
                                 };
                         }                                                             
                     }	 
        		 } 
             }
        	i.resourceTracker.s=b;
        	if (Object.keys(domainData).length > 0) {
        	    var sortedDomains = Object.keys(domainData).sort(function(a, b) {
        	        return domainData[b].stats.totalRT - domainData[a].stats.totalRT
        	    });
        	    sortedDomains = sortedDomains.slice(0, 20);
        	    for (var key in sortedDomains) {
        	        if (domainData.hasOwnProperty(sortedDomains[key])) {
        	            domainStats.domains.push(domainData[sortedDomains[key]]);
        	        }
        	    }
        	    return domainStats;
        	}
        	 return null;
        },

        addToResInfo: function(i, a) {
            var m = a.name.match(/^(https|http)?:\/\/(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
            var nm = (!a.initiatorType || i.constants.initiatorTypes.toString().indexOf(a.initiatorType) == -1) ? 'Others' : a.initiatorType; //No I18N
            var res = i.colHelpers.getPerfStats(i, a);
            if (m && m[2]) {
                i.domainInfo[m[2]] = {
                    count: i.domainInfo[m[2]] ? i.domainInfo[m[2]].count + 1 : 1,
                    loadTime: i.domainInfo[m[2]] ? i.domainInfo[m[2]].loadTime + res.totalRT : res.totalRT,
                    name: m[2]
                }
            }
            i.resourcesTotal[nm] = {
                loadTime: (i.resourcesTotal[nm] ? i.resourcesTotal[nm].loadTime : 0) + res.totalRT,
                count: (i.resourcesTotal[nm] ? i.resourcesTotal[nm].count : 0) + 1,
                name: nm
            }
        },

        getFormatedTxnName: function(i, name) {
            if(typeof name != "undefined"){
            	var txn = name;
                txn = txn.substr(0, txn.indexOf('&') > -1 ? txn.indexOf('&') - 0 : txn.length);
                txn = txn.substr(0, txn.indexOf('#') > -1 ? txn.indexOf('#') - 0 : txn.length);
                txn = i.colHelpers.replaceSpecialChars(txn.replace(/~/g, '').replace(/[a-f0-9]+[0-9][a-f0-9]+/g, '*').replace(/[0-9]+/g, '*'));
                return txn.length > 150 ? txn.substring(0, 149) : txn;            	
            }
        },

        addPerfStats: function(i,pe1, pe2, params) {
            var metricData = {};
            for (var j = 0; j < params.length; j++) {
                metricData[params[j]] = pe1[params[j]] + pe2[params[j]];
            }
            if(!!pe1.totalCT && !!pe2.totalCT){
            	metricData.totalCT=pe1.totalCT+pe2.totalCT;
            }if(!!pe1.status && !!pe2.status){
            	metricData.status = i.colHelpers.addStatusCode(pe1.status,pe2.status);
            }
            return metricData;
        },

        getAverageStats: function(metricData, len, params) {
            for (var i = 0; i < params.length; i++) {
                metricData[params[i]] = Math.round(metricData[params[i]] / len);
            }
            return metricData;
        },

        getJSErrorDetails: function(info, url, lno, colno, error, i) {
            var errDetails = {};
            if (error && error != undefined && error != null) {
                errDetails.type = error.name;
                errDetails.msg = i.colHelpers.replaceSpecialChars(error.message);
                if (error.stack != undefined || error.stacktrace != undefined) {
                    errDetails.trace = i.colHelpers.stackTrace((error.stack ? error.stack : error.stacktrace), i);
                }
            }
            if (((errDetails.type == "undefined" && errDetails.msg == "undefined") || (!error && (typeof colno != 'undefined'))) && info) {
                var e = /([a-zA-z ]*)(:)(.*)/,
                    args;
                args = e.exec(info);
                if (args != null && args.length > 3) {
                    errDetails.type = args[1];
                    errDetails.msg = i.colHelpers.replaceSpecialChars(args[3]);
                } else {
                    errDetails.type = "Uncaught Exception ";
                    errDetails.msg = i.colHelpers.replaceSpecialChars(info);
                }
            }
            if (!url || typeof url == "undefined" || url.length == 0) {
                url = document.location.pathname;
            }
            if (url && typeof url == 'string') {
                errDetails.url = i.colHelpers.getTxnName(i, url);
                errDetails.fname = i.colHelpers.getFileName(i, errDetails.url);
            }
            if (!errDetails.fname || errDetails.fname.length <= 0) {
                errDetails.fname = i.colHelpers.getFileName(i, location.hash);
            }
            errDetails.lno = lno;
            errDetails.cno = colno;
            if (!errDetails.type || !errDetails.msg || !errDetails.url || (errDetails.type && errDetails.type.length <= 0) || (errDetails.msg && (errDetails.msg.length <= 0 || errDetails.msg.length > 150)) || (errDetails.url && errDetails.url.length <= 0) || errDetails.url.indexOf(insightRUM.scriptName) != -1 || !errDetails.fname || (errDetails.fname && errDetails.fname.length <= 0)) {
                return;
            }
            errDetails.msg = errDetails.msg.length > 100 ? errDetails.msg.substring(0, 100) : errDetails.msg;
            return errDetails;
        },

        initialiseSPA: function(i, type) {
            if (typeof window.site24x7rum == 'undefined') {
                window.site24x7rum = {};
            }
            site24x7rum.routeChanges = new Array();
            //site24x7rum.sessionTrace = new Array();
            i.storeLastAjax(type);
            setInterval(function() {
                i.metricsDispatcher(i, "regular");//No I18N
            }, 10000);
            performance.onresourcetimingbufferfull = i.colHelpers.clearBuffer();
        },

        getStatusCode: function(s) {
            var st = 'Others';//No I18N
            if (s != null && s != '') {
                st = s.substring(0, 1);
                st = st == '2' || st == '4' || st == '5' ? st + 'xx' : 'Others';
            }
            return st;
        },
        
        addStatusCode: function(a,b){
        	var sts = Object.keys(b).length >0?Object.keys(b)[0]:"Others",sObj=a;
        	if(!sObj[sts]){
        		sObj[sts] = 0;
        	}
        	sObj[sts] = sObj[sts]+1;
        	return sObj;
        },

        getUniqueID: function() {
            var nav = window.navigator;
            var screen = window.screen;
            var g = nav.mimeTypes.length;
            var n = nav.userAgent.replace(/\D+/g, '');
            g += n.length > 30 ? n.substring(0,30):n;
            g += nav.plugins.length;
            g += screen.height || '';
            g += screen.width || '';
            g += screen.pixelDepth || '';
            return g;
        },

        setCookie: function(name, value, days) {
            var date = new Date();
            days = ("undefined" == typeof days || days < 0) ? parseInt(new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()) - parseInt(date.getDate()) : days;//No I18N
            date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
            var expires = "; expires=" + date.toGMTString(); //No I18N
            document.cookie = name + "=" + value + expires + "; path=/";
            return true;
        },
        
        isUserAgentBlocked : function(i){
        	if(!!window.navigator && !!window.navigator.userAgent){
        		var ua = window.navigator.userAgent;
        		for(var u in i){
            		if(i[u]!="" && ua.indexOf(i[u])>-1){
            			return true;
            		}
            	}
        		return false;
        	}
        	return true;
        },

        getCookie: function(i, cookieName) {
            var value = "",
                isSet = false,
                sMatch = (' ' + document.cookie).match(new RegExp('[; ]' + cookieName + '=([^\\s;]*)'));
            if (cookieName && sMatch) {
                value = unescape(sMatch[1]);
            }
            var curT = (new Date()).getTime();
            var ns = performance.timing.navigationStart + i.timeOut < curT ? performance.timing.navigationStart : curT;

            if (cookieName == "site24x7rumID") {
                var nss = false;
                if (value !== "") {
                    value = value.split(".");
                    nss = (value[1] + i.timeOut < curT) ? true : false;
                    value[1] = nss ? ns : value[1];
                    if(typeof value[0] =="undefined" || value[0].length > 50){
                    	var v = i.colHelpers.getUniqueID();
                    	value[0] = v.length >50?v.substring(0,50):v;
                    }
                    value = value[0] + "." + value[1];
                    isSet = i.colHelpers.setCookie(cookieName, value) && false;
                } else {
                    value = i.colHelpers.getUniqueID() + "." + ns;
                    isSet = i.colHelpers.setCookie(cookieName, value);
                    nss = true;
                }
                value = value.split(".");
                return {
                    guid: value[0],
                    sstime: value[1],
                    colT: curT,
                    uniqVisitor: isSet,
                    nSes: nss
                };
            } else if(cookieName == "site24x7RUMSnapshotId") {
		 if(value.indexOf('.')>-1){value = value.split(".");}
		return value;
            }
        }

    },

    /*-----------------------------------------*/

    initialize: function(i) {


        i.xhrCalls = new Array();
        i.xhrCallTracker = {};
        i.metrics = new Array();
        i.pageMetricsSent = false;
        i.errors = new Array();
        i.rawErrors = new Array();
        i.resourceEntries = new Array();
        i.collectorData = {};
        i.timeOut = 10 * 60 * 1000;
        i.curUrl = ""; 
        i.pType="static"; //No I18N
        i.txnT = "";
        i.perfStats = {};
        i.resourceSent = false;
        i.collectTrace = false;
	    i.isOnDemand = false;
        i.isCorsSupported = ('withCredentials' in new XMLHttpRequest()) || (typeof XDomainRequest != "undefined"); // No I18N
        i.snapshot = {};
        i.sesTrace = new Array();
        i.domainInfo = {}, i.resourcesTotal = {};
        i.onPageLoadEntriesLen = 0;
        i.scriptName = 'rum-min.js'; //No I18N
        i.collector = '//col.site24x7rum.com'; //No I18N
        i.includeAjaxCalls = (typeof site24x7rum == 'undefined') || ((typeof site24x7rum.includeAjaxCalls != 'undefined') && site24x7rum.includeAjaxCalls); //No I18N
        i.sendAjaxCalls = (typeof site24x7rumProp != 'undefined' && typeof site24x7rumProp.sendAjaxCalls == 'boolean') ? site24x7rumProp.sendAjaxCalls : (typeof s247RUM != 'undefined' && s247RUM.ajax_enabled ? s247RUM.ajax_enabled:false); //No I18N
        i.includeCrossDomainAjaxCalls = (typeof site24x7rumProp != 'undefined' && typeof site24x7rumProp.includeCrossDomainAjaxCalls == 'boolean') ? site24x7rumProp.includeCrossDomainAjaxCalls : (typeof s247RUM != 'undefined' && s247RUM.cx_ajax_enabled ? s247RUM.cx_ajax_enabled:false); //No I18N
        i.domainsToExclude = ['static.site24x7rum.com', 'static.site24x7rum.eu','col.site24x7rum.com','col.site24x7rum.eu']; //No I18N
        i.userAgentsToBlock = ["Mozilla/5.0 (Windows NT 6.1; WOW64; rv:45.0.247) Gecko/20100101 Firefox/45.0.247"]; //No I18N
        i.userAgentsToBlock = (typeof site24x7rumProp != 'undefined' && typeof site24x7rumProp.userAgentsToBlock != 'undefined') ? insightRUM.userAgentsToBlock.concat(site24x7rumProp.userAgentsToBlock) : (typeof s247RUM != 'undefined' && s247RUM.excluded_useragents ? insightRUM.userAgentsToBlock.concat(s247RUM.excluded_useragents):insightRUM.userAgentsToBlock); //No I18N
        i.excludedDomains = typeof site24x7rumProp != 'undefined' && site24x7rumProp.excludedDomains ? site24x7rumProp.excludedDomains : (typeof s247RUM != 'undefined' && s247RUM.excluded_domains ? s247RUM.excluded_domains : [""]);
        i.rumMonType = (typeof site24x7rumProp != 'undefined' && typeof site24x7rumProp.rumMonType == "number") ? site24x7rumProp.rumMonType : 0; //No I18N
        i.version = 2.0;
        i.resourceTracker={s:0,e:i.onPageLoadEntriesLen};
        if (typeof window.site24x7rum == 'undefined') {
            window.site24x7rum = {};
        }
        site24x7rum.sessionTrace = new Array();
	    site24x7rum.routeChanges = new Array();
        i.storeLastAjax = function(type) {
            i.xhrCallsLast = insightRUM.xhrCalls;
            i.xhrCalls = new Array();
            if (type == "spa") {
                i.sesTrace = site24x7rum.sessionTrace;
                site24x7rum.sessionTrace = new Array();
            }
            i.metricsDispatcher(i, type);
            if (type == "spa") {
            	var rc = site24x7rum.routeChanges;
            	i.changeUrl =true;
                i.pType="dynamic"; //No I18N
                i.txnT = rc.length > 0 ? Math.round(window.performance.timing.navigationStart+rc[0].time) : Math.round(i.txnT);
            }
        }

        i.eventHandlers = {
            onerror: function(a) {
                i.rawErrors.push(a);
                var err = i.colHelpers.getJSErrorDetails(a[0], a[1], a[2], a[3], a[4], i);
                if (err && err.fname && err.lno && err.cno && err.type && err.msg) {
                	 var data = {
                             or: err.fname,
                             lno: err.lno,
                             cno: err.cno
                         }
                	 i.colHelpers.addToSession(i,(err.type + ": " + err.msg), "error", data, i.colHelpers.getCurrentTime());
                }                
            },

            onload: function() {
            	if(document.readyState && document.readyState=="complete"){
            		if(!!window.performance.getEntries){i.onPageLoadEntriesLen = window.performance.getEntries().length;};setTimeout(function() {i.colHelpers.initialiseSPA(i, "initial");}, 0);//No I18N
            	}
            	else{
            		if (window.addEventListener) {
            			window.addEventListener("load", function() {if(!!window.performance.getEntries){i.onPageLoadEntriesLen= window.performance.getEntries().length;};setTimeout(function(){i.colHelpers.initialiseSPA(i, "initial");}, 0); },!1);
            		} else if (window.attachEvent)  {
            			window.attachEvent("onload", function() {if(!!window.performance.getEntries){i.onPageLoadEntriesLen= window.performance.getEntries().length;};setTimeout(function(){i.colHelpers.initialiseSPA(i, "initial");}, 0); },!1);
            		}
            	}
            },
            
            onunload: function(e){
            	i.metricsDispatcher(i, "unload"); //No I18N
            },

            onkeypress:

                function(event) {
                    var target = "";
                    if(event){
            			var e = event.target || event.srcElement ; 
            			if(e){
            				target = e.id != "" ? e.id : (e.className != "" ? e.className : e.tagName);
                			}
            		}
            		target = typeof target!="undefined" && target !=""?target:"body"; //No I18N
                    var data = {
                        or: target
                    };
                    i.colHelpers.addToSession(i,"typing", "event", data,i.colHelpers.getCurrentTime());
                },

            onclick:

                function(event) {
            		var target = "";
            		if(event){
            			var e = event.target || event.srcElement ; 
            			if(e){
            				target = e.id != "" ? e.id : (e.className != "" ? e.className : e.tagName);
                			}
            		}
            		target = typeof target!="undefined" && target !=""?target:"body"; //No I18N                   
            		var data = {
            				or: target
            		};
                    i.colHelpers.addToSession(i,"click", "event", data, i.colHelpers.getCurrentTime());
                },

            onscroll:

                function(event) {
            		var target = "";
                    if(event){
                    	var e = event.target || event.srcElement ; 
                    	if(e){
                    		target = e.id != "" ? e.id : (e.className != "" ? e.className : e.tagName);
                    		}
                    }
                    target = typeof target!="undefined" && target !=""?target:"body";  //No I18N                  
                    var data = {
                        or: target
                    };
                    i.colHelpers.addToSession(i,"scroll", "event", data, i.colHelpers.getCurrentTime());
                },

            onhashchange: function() {
                i.colHelpers.pushRoutes(i,window.location, i.colHelpers.getCurrentTime());
            },

            onpopstate: function(event) {
                i.colHelpers.pushRoutes(i,window.location, i.colHelpers.getCurrentTime());
            },

            ajax_open: function() {
                XMLHttpRequest.prototype.open = (function(open) {
                    return function(method, url, async, user, password) {
                        try{
                        	this._url = url.indexOf("http") > -1 ? url : document.location.origin + url; //No I18N
                            var xhrCall = {};
                            if (this._url.indexOf(insightRUM.collector) == -1) {
                                if (window.addEventListener) {
                                    this.addEventListener("loadstart", function() {
                                        xhrCall.name = this._url;
                                        xhrCall.st = i.colHelpers.getCurrentTime();
                                    }, !1); 
                                    this.addEventListener("loadend", function() {
                                        xhrCall.end = i.colHelpers.getCurrentTime();
                                        xhrCall.status = this.status;
                                        insightRUM.xhrCalls.push(xhrCall);
                                        var d = {
                                            or: i.colHelpers.getFormatedTxnName(i,document.location.origin)
                                        };
                                        if (i.collectTrace) {i.colHelpers.addAjaxToSession(i, xhrCall.name, "ajax", d, xhrCall.st);}
                                    }, !1); 
                                } else if (window.attachEvent) {
                                    this.attachEvent("loadstart", function() {
                                        xhrCall.name = this._url;
                                        xhrCall.st = i.colHelpers.getCurrentTime();
                                    }, !1); 
                                    this.attachEvent("loadend", function() {
                                        xhrCall.end = i.colHelpers.getCurrentTime();
                                        xhrCall.status = this.status;
                                        insightRUM.xhrCalls.push(xhrCall);
                                        var d = {
                                            or: i.colHelpers.getFormatedTxnName(i,document.location.origin)
                                        };
                                        if (i.collectTrace){i.colHelpers.addAjaxToSession(i, xhrCall.name, "ajax", d, xhrCall.st);}
                                    }, !1);
                                }
                            }
                        }catch(e){}
                        open.apply(this, arguments);
                    };
                })(XMLHttpRequest.prototype.open);
            },

            onpushstate: function() {
                (function(history) {
                    var pushState = history.pushState;
                    history.pushState = function(state) {
                    	var t =i.colHelpers.getCurrentTime();var res =pushState.apply(history, arguments);
                    	insightRUM.colHelpers.pushRoutes(i,window.location,t);return res;
                    }
                }(window.history))
            },


            onreplacestate: function() {
                (function(history) {
                    var replaceState = history.replaceState;
                    history.replaceState = function(state) {
                    	var t =i.colHelpers.getCurrentTime();var res =replaceState.apply(history, arguments);
                    	insightRUM.colHelpers.pushRoutes(i,window.location,t);return res;
                    }
                })(window.history)
            }
        }


    },


    /*-----------------------------------------*/
    metricsCollector: {

        configInfo: function(i, type) {
            return {
                appKey: rumMOKey,
                version: i.version
            }
        },


        sessionInfo: function(i, type) {
            var sInfo = i.colHelpers.getCookie(i, "site24x7rumID");//No I18N
            var ua = navigator.userAgent.length >200 ?navigator.userAgent.substring(0,200):navigator.userAgent;
            return {
                useragent: ua,
                sstime: Number(sInfo.sstime),
                colT: sInfo.colT,
                usrInfo: {
                    uniqVisitor: sInfo.uniqVisitor,
                    guid: sInfo.guid,
                    nSes: sInfo.nSes
                }
            };
        },


        dataList: function(i, type) {
            if (type == "regular"||type == "unload") {
                var dataList = [];
                if (i.sendAjaxCalls) {
                    var txnsPerSend = 0;
                    var matches = document.location.host.match(/^(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
                    var parentDomain = (matches && matches[1]) ? matches[1] : document.location.host;
                    while (i.xhrCalls.length > 0 && txnsPerSend < 9) {
                        var xhr = i.xhrCalls.pop();
                        if (xhr && xhr.name && (xhr.name.indexOf(parentDomain) > -1 || i.includeCrossDomainAjaxCalls)) {
                             if(window.performance.getEntriesByName){var e =window.performance.getEntriesByName(xhr.name);}
                            if (e && e.length > 0) {
                                var j = i.xhrCallTracker.hasOwnProperty(xhr.name) ? i.xhrCallTracker[xhr.name] : 0;
                                for (; j < e.length; j++) {
                                    if (e[j].duration) {
                                        e[j].loadEventEnd = e[j].fetchStart + e[j].duration;
                                        var perfStats = i.colHelpers.getPerfStats(i,e[j]);
                                        if (perfStats.totalRT <= 300000 && perfStats.totalRT >= perfStats.fbT && perfStats.fbT >= 0) {
                                            var status = {};
                                            status[i.colHelpers.getStatusCode(xhr.status + '')] = 1;
                                            perfStats.type = 'ajax';
                                            perfStats.status = status;
                                            dataList.push(perfStats);
                                            txnsPerSend++;
                                        }
                                    }
                                }
                                i.xhrCallTracker[xhr.name] = j;
                            }
                        }
                    }
                }
                return (dataList.length > 0) ? dataList : null;
            }
            var ajaxCalls = {};
            var ajaxCallsMap = {};
            var dataList = [];
            if (site24x7rum.routeChanges.length > 1 || type == 'initial') {
                var init = 0,
                    end = 0.0;
                var diff = 0.0;
                var ajax_call = type == 'initial' ? {  //No I18N
                    time: 0
                } : site24x7rum.routeChanges.shift();
                var perfStats = {};
                if (type == 'initial') {
                    i.perfStats = perfStats = i.colHelpers.getPerfStats(i, window.performance.timing);
                    i.curUrl = perfStats.txnName;i.pType="static"; //No I18N
                    i.txnT = window.performance.timing.navigationStart;
                } else {
                    perfStats.rdT = perfStats.dnsT = perfStats.conT = perfStats.nwT = perfStats.sendT = perfStats.fbT = perfStats.beT = perfStats.dlT = perfStats.dpT = perfStats.drT = perfStats.prT = perfStats.feT = perfStats.totalRT = 0;
                }
                var xhrLen = 0;
                var matches = document.location.host.match(/^(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
                var parentDomain = (matches && matches[1]) ? matches[1] : document.location.host;
                while (i.xhrCallsLast.length > 0 && (!!ajax_call.url || i.sendAjaxCalls)) {
                    var xhr = i.xhrCallsLast.shift();
                    if (xhr && xhr.st >= ajax_call.time && xhr.name && (xhr.name.indexOf(parentDomain) > -1 || i.includeCrossDomainAjaxCalls)) {
                        if(window.performance.getEntriesByName){var e =window.performance.getEntriesByName(xhr.name);}
                        if (e && e.length > 0) {
                            var j = i.xhrCallTracker.hasOwnProperty(xhr.name) ? i.xhrCallTracker[xhr.name] : 0;
                            if (e[j].duration) {
                                e[j].loadEventEnd = e[j].fetchStart + e[j].duration;
                                i.colHelpers.addToResInfo(i, e[j]);
                                var ajax_perfStats = i.colHelpers.getPerfStats(i, e[j]);
                                if (ajax_perfStats.totalRT <= 150000 && ajax_perfStats.totalRT >= ajax_perfStats.fbT && ajax_perfStats.fbT >= 0) {
                                    if (xhr.end > end) {
                                        end = xhr.end;
                                    }
                                    xhrLen++;
                                    var status = {};
                                    status[i.colHelpers.getStatusCode(xhr.status + '')] = 1;
                                    ajax_perfStats.status = status;
                                    if (type == 'spa') {
                                        perfStats = i.colHelpers.addPerfStats(i,perfStats, ajax_perfStats,i.constants.perfStats);
                                    }
                                    ajax_perfStats.totalCT =1;
                                    if(ajaxCallsMap[ajax_perfStats.txnName]){
                                    	ajaxCalls[ajax_perfStats.txnName]=i.colHelpers.addPerfStats(i,ajaxCalls[ajax_perfStats.txnName], ajax_perfStats,i.constants.perfStats);
                    					ajaxCalls[ajax_perfStats.txnName].txnName =ajax_perfStats.txnName;
                                    	var pAjax = ajaxCallsMap[ajax_perfStats.txnName];
                                    	ajaxCallsMap[ajax_perfStats.txnName] = {totalRT : (pAjax.totalRT+ajax_perfStats.totalRT) , totalCT : (pAjax.totalCT+1) , status :pAjax.status};
                                    }else{
                                    	ajaxCalls[ajax_perfStats.txnName]=ajax_perfStats;
                                    	ajaxCallsMap[ajax_perfStats.txnName] = {totalRT : ajax_perfStats.totalRT , totalCT : 1 , status : status};
                                    }
                                }
                            }

                            i.xhrCallTracker[xhr.name] = j;
                        }
                    }
                }
                if (type == 'spa' && !!ajax_call.url) {
                    perfStats.ajaxCallsMap = ajaxCallsMap;
                    var totalTime = end - ajax_call.time;
                    perfStats = i.colHelpers.getAverageStats(perfStats, xhrLen,i.constants.perfStats);
                    diff = totalTime - perfStats.totalRT;
                    if (diff > 0) {
                        perfStats.drT = perfStats.dpT = perfStats.dpT + diff;
                        perfStats.feT += diff;
                        perfStats.totalRT += diff;
                    }
                    perfStats.txnName = i.colHelpers.getFormatedTxnName(i, ajax_call.url);
                    i.curUrl= perfStats.txnName; 
                }
                perfStats.type = type;
                if (perfStats.totalRT > 0 && perfStats.totalRT < 150000) {
		            i.perfStats = perfStats;
                    dataList.push(perfStats);
                    dataList = dataList.concat(i.colHelpers.getAsArray(ajaxCalls,25,"totalRT"));
                }
            }
            return (dataList.length > 0) ? dataList : null;

        },
        domainStats:function(i,type){
        	if(type=="initial"){
        		return i.colHelpers.getDomainMetrics(i,i.resourceTracker.s,i.onPageLoadEntriesLen,type);
        	} else if((type == "unload"||type =="spa") &&  !!window.performance.getEntries && i.resourceTracker.s < window.performance.getEntries().length){
        		i.resourceTracker.e=window.performance.getEntries().length;
        		return  i.colHelpers.getDomainMetrics(i,i.resourceTracker.s,i.resourceTracker.e,type);
        	}        	        	
        },

        errorList: function(i, type) {
        	if (type != "initial") {
        		var errorsPerSend = 0,
                errorList = [];
            while (i.rawErrors.length > 0 && errorsPerSend < 9) {
                var err = i.rawErrors.pop();
                if (err) {
                    var errDetails = i.colHelpers.getJSErrorDetails(err[0], err[1], err[2], err[3], err[4], i);
                    if (errDetails) {
                        errorList.push(errDetails);
                        errorsPerSend++;
                    }
                }
            }
            return (errorList.length > 0) ? errorList : null;	
        	}
        	return null;
        },


        sendSnapshotInfo: function(i, type) {
            if (type == "initial") {
                return i.colHelpers.getCookie(i, "site24x7RUMSnapshotId") == "" ? true : false;//No I18N
            } else {
                return false;
            }
        },

        sesTrace: function(i, type) {

            if (type == "trace" && !i.resourceSent) {
                return i.colHelpers.getAllResourceTimings(i);
            } else if (i.resourceSent && i.collectTrace) {

                var trace = {};
                var ns = window.performance.timing.navigationStart;
                var cookie = i.colHelpers.getCookie(i, "site24x7RUMSnapshotId"); //No I18N
                if (i.resourceSent && cookie != "" && Number(cookie[0]) + i.timeOut > (new Date()).getTime()) {
                    if (type == "spa") {
                        trace.entriesList = i.sesTrace;trace.sT = i.txnT;trace.sescolT = Number(cookie[0]);
                        trace.url = i.curUrl;trace.isOnDemand = cookie[1];trace.pType = i.pType;
                        trace.endTime = Math.round(i.colHelpers.getCurrentTime() - (i.txnT - ns));
                        if (Object.keys(i.domainInfo).length > 0 && Object.keys(i.resourcesTotal).length > 0) {
                            trace.totalRT = i.perfStats.totalRT;
                            if(trace.endTime < trace.totalRT){trace.endTime+=trace.totalRT;}
                            trace.domainInfo = i.colHelpers.getObjAsArray(i.domainInfo);
                            trace.resourceCT = trace.domainInfo[0].count;
                            trace.resourcesTotal = i.colHelpers.getObjAsArray(i.resourcesTotal);
                            i.domainInfo = {}, i.resourcesTotal = {};
                        }
                    }
                    if (type == "regular") {
                        trace.entriesList = site24x7rum.sessionTrace;
                        site24x7rum.sessionTrace = new Array();
                        if (i.changeUrl) {
                            var url = window.location.hash != "" ? window.location.hash.replace("#", "") : window.location.pathname;
                            i.curUrl = i.colHelpers.getFormatedTxnName(i, url);
                        }
                        trace.url = i.curUrl;trace.isOnDemand = cookie[1];trace.pType = i.pType;
                        trace.sescolT = Number(cookie[0]);trace.sT = i.txnT;
                        trace.endTime = Math.round(i.colHelpers.getCurrentTime() - (i.txnT - ns));
                    }
                    return (!!trace.entriesList && trace.entriesList.length > 0 || trace.domainInfo) ? trace : null;
                } else {
                    site24x7rum.sessionTrace = new Array();
                    i.collectTrace = false;
                    return null;
                }

            }else if(type == "regular" && !i.resourceSent){ //No I18N
            	site24x7rum.sessionTrace = new Array();
                i.collectTrace = false;
                return null;
            }
            return null;
        }
    },



    /*-----------------------------------------*/
    metricsDispatcher: function(i, type) {
       try{
    	   var metrics = {},
           url = i.collector + (type == "initial" ? "/rum/data" : "/rum/trace"); //No I18N
       for (var key in i.metricsCollector) {
           if (i.metricsCollector.hasOwnProperty(key)) {
               var m = i.metricsCollector[key](i, type);
               if (m != null) {metrics[key] = m;}
           }
       }

       if (type == "trace") {i.resourceSent = true;}
       if (metrics.dataList != undefined || metrics.errorList != undefined || metrics.sesTrace != undefined || metrics.domainStats!= undefined) {
           metrics = JSON.stringify(metrics);
           var xhr = ("withCredentials" in new XMLHttpRequest()) ? new XMLHttpRequest() : (typeof XDomainRequest != "undefined") ? new XDomainRequest() : null; //No I18N
           try {
               if (!xhr) {
                   return false;
               }
               xhr.open('POST', url);
               xhr.onload = function() {
                   i.responseHandler(i, xhr.responseText);
               };
               xhr.send(metrics);
               return true;
           } catch (e) {}
         }
       }catch(e){}
    },

    /*-----------------------------------------*/
    responseHandler: function(i, response) {
        i.collectorData = JSON.parse(response);
        var ssCookie = i.colHelpers.getCookie(i, "site24x7RUMSnapshotId"); //No I18N
        if (i.collectorData.sendSnaspshot && i.collectorData.Threshold && i.perfStats.totalRT > i.collectorData.Threshold) {
            i.isOnDemand = i.collectorData.isOndemand?true:false;
	    i.colHelpers.setCookie("site24x7RUMSnapshotId", i.txnT+"."+i.isOnDemand, 1/24); //No I18N   		
            i.metricsDispatcher(i, "trace"); //No I18N
            i.resourceSent = true;

        } else if (i.collectorData.snapshotAdded) {

            i.collectTrace = true;
        } else if (ssCookie != "" && !i.resourceSent && Number(ssCookie[0]) + i.timeOut > (new Date()).getTime()) {
            i.metricsDispatcher(i, "trace");//No I18N
            i.resourceSent = true;
        }

        i.colHelpers.clearBuffer();
    }

};

Object.keys = Object.keys || function(o, k, r) {
    r = [];
    for (k in o) r.hasOwnProperty.call(o, k) && r.push(k);
    return r;
};

/*----------execution starts from here------------*/

var initInsightEvent = function(w,a){
	 var p = w[a];
     if (a == "onerror") {
         w[a] = function() {try{insightRUM.eventHandlers[a](arguments);}catch(e){}"function" == typeof p ? p.apply(this, arguments) : "";//No I18N
         }
     } else if(a =="onload"){
    	 insightRUM.eventHandlers[a]();
     }else {
         w[a] = function(arg) {try{arg = arg || window.event;insightRUM.eventHandlers["on" + arg.type](arg);}catch(e){}"function" == typeof p ? p.apply(this, arguments) : "";//No I18N
         }
     }	
};

(function(i, a){
    var isAllowed = true;
    var m = window.location.href.match(/^(https|http)?:\/\/(?:www\.)?([^/:?#]+)(?:[/:?#]|$)/i);
    if(m && m[2]){
        pDomain=m[2];
    }
    for(var d=0; d <i.excludedDomains.length; d++) {
        if(i.excludedDomains[d]!="" && pDomain.indexOf(i.excludedDomains[d])>=0){
            isAllowed =false;
        }
    }
    if (i.isCorsSupported && isAllowed && !i.colHelpers.isUserAgentBlocked(i.userAgentsToBlock)) {
        for (var j = 0; j < a.length; j++) {
            if (typeof window[a[j]] != "undefined") {
            	initInsightEvent(window,a[j]);
            }else if(typeof document[a[j]] != "undefined"){
        		initInsightEvent(document,a[j]);
    	    }else {
                i.eventHandlers[a[j]](arguments);
            }
        }
    }
    if(typeof s247RUM !='undefined'){
        insightTMRUM.deploy(s247RUM);
    }

})(insightRUM, function() {
	insightRUM.initialize(insightRUM);
    var arr = insightRUM.constants.events;
    if (window.performance && !!window.performance.getEntries && insightRUM.includeAjaxCalls) {

        arr.push("ajax_open");
    }
    if (insightRUM.rumMonType == 2) {
        var usePushState = !!window.history && !!window.history.pushState;
        arr=arr.concat(insightRUM.colHelpers.addSPAEvents(usePushState));
    } else if (insightRUM.rumMonType == 3) {
        var ua = navigator.userAgent;
        var isIOSWebView = /(iPad|iPhone|iPod);.*CPU.*OS 7_\d.*AppleWebKit/i.test(ua) && ua.indexOf("Safari") === -1; //No I18N
        var usePushState = !!window.history.pushState && !(ua.indexOf("Android ") > -1 && ua.indexOf("Mozilla/5.0") > -1 && ua.indexOf("AppleWebKit") > -1 && ua.indexOf("Chrome") === -1) && !isIOSWebView; //No I18N
        arr=arr.concat(insightRUM.colHelpers.addSPAEvents(usePushState));
    }
    return arr;

}());


if(!JSON)
{
	var JSON;
	JSON={};
	(function(){"use strict";//No I18N
	var escapable=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,gap,indent,meta={'\b':'\\b','\t':'\\t','\n':'\\n','\f':'\\f','\r':'\\r','"':'\\"','\\':'\\\\'},rep;//No I18N
	function quote(string){
		escapable.lastIndex=0;
		return escapable.test(string)?'"'+ string.replace(escapable,function(a){var c=meta[a];return typeof c==='string'?c:'\\u'+('0000'+ a.charCodeAt(0).toString(16)).slice(-4);})+'"':'"'+ string+'"';//No I18N
	}
	function str(key,holder){
		var i,k,v,length,mind=gap,partial,value=holder[key];
		if(value&&typeof value==='object'&&typeof value.toJSON==='function'){//No I18N
			value=value.toJSON(key);
		}
		if(typeof rep==='function'){//No I18N
			value=rep.call(holder,key,value);
		}
		switch(typeof value){
		case'string':return quote(value);//No I18N
		case'number':return isFinite(value)?String(value):'null';//No I18N
		case'boolean':case'null':return String(value);//No I18N
		case'object':if(!value){return'null';}//No I18N
		gap+=indent;
		partial=[];
		if(Object.prototype.toString.apply(value)==='[object Array]'){//No I18N
			length=value.length;
			for(i=0;i<length;i+=1){
				partial[i]=str(i,value)||'null';//No I18N
			}
			v=partial.length===0?'[]':gap?'[\n'+ gap+ partial.join(',\n'+ gap)+'\n'+ mind+']':'['+ partial.join(',')+']';//No I18N
			gap=mind;return v;
		}
		if(rep&&typeof rep==='object'){//No I18N
			length=rep.length;
			for(i=0;i<length;i+=1){
				if(typeof rep[i]==='string'){//No I18N
					k=rep[i];v=str(k,value);
					if(v){
						partial.push(quote(k)+(gap?': ':':')+ v);
					}
				}
			}
		}
		else{
			for(k in value){
				if(Object.prototype.hasOwnProperty.call(value,k)){
					v=str(k,value);
					if(v){
						partial.push(quote(k)+(gap?': ':':')+ v);
					}
				}
			}
		}
		v=partial.length===0?'{}':gap?'{\n'+ gap+ partial.join(',\n'+ gap)+'\n'+ mind+'}':'{'+ partial.join(',')+'}';gap=mind;return v;}//No I18N
	}

	if(typeof JSON.stringify!=='function'){//No I18N
		JSON.stringify=function(value,replacer,space){
			var i;
			gap='';
			indent='';
			if(typeof space==='number'){//No I18N
				for(i=0;i<space;i+=1){
					indent+=' ';
				}
			}
			else if(typeof space==='string')//No I18N
			{
				indent=space;
			}
			rep=replacer;
			if(replacer&&typeof replacer!=='function'&&(typeof replacer!=='object'||typeof replacer.length!=='number')){//No I18N
				throw new Error('JSON.stringify');//No I18N
			}
			return str('',{'':value});
		};
	}}());
}

